import java.io.File;

import org.olat.core.CoreSpringFactory;
import org.olat.core.commons.modules.bc.FolderConfig;
import org.olat.core.commons.services.vfs.VFSRepositoryModule;
import org.olat.core.commons.services.vfs.VFSRepositoryService;
import org.olat.core.id.Identity;
import org.olat.core.logging.AssertException;
import org.olat.core.logging.Tracing;
import org.olat.core.logging.activity.ThreadLocalUserActivityLogger;
import org.olat.core.util.FileUtils;
import org.olat.core.util.vfs.filters.VFSItemFilter;
import org.olat.core.util.vfs.filters.VFSSystemItemFilter;
import org.olat.core.util.vfs.filters.VFSVersionsItemFilter;

public class LocalFolderImpl extends LocalImpl implements VFSContainer {

    @Override
    public VFSContainer createChildContainer(String name) {
        File fNewFile = new File(getBasefile(), name);
        if (!isInPath(name)) {
            log.warn("Could not create a new container::{} in container::{} - file out of parent directory", name, getBasefile().getAbsolutePath());
            return null;
        }
        if (!fNewFile.mkdir()) {
            return null;
        }
        LocalFolderImpl locFI = new LocalFolderImpl(fNewFile, this);
        locFI.setDefaultItemFilter(defaultFilter);
        return locFI;
    }


    @Override
    public VFSLeaf createChildLeaf(String name) {
        //Path Traversal Vul
        File fNewFile = new File(getBasefile(), name);
        try {
            if (!isInPath(name)) {
                log.warn("Could not create a new leaf::{} in container::{} - file out of parent directory", name, getBasefile().getAbsolutePath());
                return null;
            }
            if (!fNewFile.getParentFile().exists()) {
                fNewFile.getParentFile().mkdirs();
            }
            if (!fNewFile.createNewFile()) {
                log.warn("Could not create a new leaf::{} in container::{} - file alreay exists", name, getBasefile().getAbsolutePath());
                return null;
            }
        } catch (Exception e) {
            log.error("Error while creating child leaf::{} in container::{}", name, getBasefile().getAbsolutePath(), e);
            return null;
        }
        return new LocalFileImpl(fNewFile, this);
    }
}