import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.JarURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.jar.JarEntry;
import java.util.jar.JarFile;
import java.util.zip.ZipEntry;

import org.lemsml.jlems.ResourceRoot;
import org.lemsml.jlems.core.logging.E;
import org.lemsml.jlems.core.sim.ContentError;

public final class JUtil {

    public static void unpackJar(File fjar, File fout) throws IOException {

        JarFile jf = new JarFile(fjar);
        Enumeration<JarEntry> en = jf.entries();
        while (en.hasMoreElements()) {
            JarEntry je = en.nextElement();

            //Path Traversal Vul
            java.io.File f = new File(fout, je.getName());
            if (je.isDirectory()) {
                f.mkdirs();
                continue;
            } else {
                // f.getParentFile().mkdirs();
                if (f.getPath().indexOf("META-INF") >= 0) {
                    // skip it
                } else {
                    f.getParentFile().mkdirs();
                    java.io.InputStream is = jf.getInputStream(je);
                    java.io.FileOutputStream fos = new FileOutputStream(f);
                    // EFF - buffering, file channels??
                    while (is.available() > 0) {
                        fos.write(is.read());
                    }
                    fos.close();
                    is.close();
                }
            }
        }
        //  E.info("unpacked jar to " + fout);

    }
}